/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package encryptpro;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.net.*;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Rakesh's PC
 */
public class MainBody extends javax.swing.JFrame {

    File f;

    /**
     * Creates new form Encrypt
     */
    public MainBody() {
        //ititialze the form
        initComponents();
        jEButton.setVisible(false);
        jDButton.setVisible(false);
        jSButton.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOpenFileButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jEButton = new javax.swing.JButton();
        jDButton = new javax.swing.JButton();
        jSButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ENCRYPT PRO");

        jOpenFileButton.setText("Open File");
        jOpenFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOpenFileButtonActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial Unicode MS", 0, 13)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField1.setEditable(false);

        jEButton.setText("Encrypt it");
        jEButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEButtonActionPerformed(evt);
            }
        });

        jDButton.setText("Decrypt it");
        jDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDButtonActionPerformed(evt);
            }
        });

        jSButton.setText("Save decrypted file");
        jSButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jEButton)
                .addGap(116, 116, 116)
                .addComponent(jOpenFileButton)
                .addGap(43, 43, 43)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jDButton)
                .addGap(31, 31, 31)
                .addComponent(jSButton)
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jOpenFileButton)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEButton)
                    .addComponent(jDButton)
                    .addComponent(jSButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jOpenFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOpenFileButtonActionPerformed
        jTextField1.setText("");
        jTextArea1.setText("");
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter txtfilter = new FileNameExtensionFilter("txt", "txt");
        FileNameExtensionFilter docxfilter = new FileNameExtensionFilter("rich text files", "rtf");
        FileNameExtensionFilter htmlfilter = new FileNameExtensionFilter("html files", "html");
        FileFilter[] FileFilters = chooser.getChoosableFileFilters();
        int n = FileFilters.length;
        for (int i = 0; i < n; i++) {
            chooser.removeChoosableFileFilter(FileFilters[i]);
        }
        chooser.setFileFilter(txtfilter);
        chooser.setFileFilter(docxfilter);
        chooser.setFileFilter(htmlfilter);
        n = chooser.showOpenDialog(null);
        if (n == JFileChooser.APPROVE_OPTION) {
            f = chooser.getSelectedFile();
            String ext = f.getName().substring(f.getName().lastIndexOf('.') + 1);
            System.out.println("file selected");
            jTextField1.setText(f.getAbsolutePath());
            System.out.println("got location");

            StringBuilder sb = new StringBuilder();
            try {
                URL url = f.toURI().toURL();
                URLConnection urlcon = url.openConnection();
                InputStream stream = urlcon.getInputStream();
                int i;
                while ((i = stream.read()) != -1) {
                    sb.append((char) i);
                }
            } catch (IOException e) {
                System.out.println(e);
            }
            String text = sb.toString();
            String textToDisplay = (!f.getName().startsWith("encrypted") && ext.equals("rtf"))
                    ? text.substring(text.lastIndexOf("\\loch\n") + 6, text.lastIndexOf("}\n"
                            + "\\par }"))
                    : text;
            jTextArea1.setText(textToDisplay);
            jEButton.setVisible(true);
            jDButton.setVisible(true);
            jSButton.setVisible(false);
        }
    }//GEN-LAST:event_jOpenFileButtonActionPerformed

    private void jEButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEButtonActionPerformed
        try {
            String text = Encrypt.encryptFile(f, jTextField1);
            jTextArea1.setText(text);
            f = new File(jTextField1.getText());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jEButtonActionPerformed

    private void jDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDButtonActionPerformed
        try {
            System.out.println("decrypting " + f.getAbsolutePath());
            String text = Decrypt.decryptFile(f);
            String textToDisplay = f.getName().endsWith(".rtf") ? 
                    text.substring(text.lastIndexOf("\\loch\n") + 6, text.lastIndexOf("}\n"
                            + "\\par }"))
                    : text;
            jTextArea1.setText(textToDisplay);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jDButtonActionPerformed

    private void jSButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter txtfilter = new FileNameExtensionFilter("txt", "txt");
        FileFilter[] FileFilters = chooser.getChoosableFileFilters();
        int n = FileFilters.length;
        for (int i = 0; i < n; i++) {
            chooser.removeChoosableFileFilter(FileFilters[i]);
        }
        chooser.setFileFilter(txtfilter);
        File finall;
        // chooser.setFileFilter(docxfilter);
        n = chooser.showSaveDialog(null);
        if (n == JFileChooser.APPROVE_OPTION) {
            finall = chooser.getSelectedFile();
        }
        else return;
        JOptionPane.showMessageDialog(null, "saved to " + finall.getAbsolutePath());
        jTextField1.setText(finall.getAbsolutePath());
        try (FileWriter w = new FileWriter(finall)){ 
                w.write(jTextArea1.getText());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jSButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainBody.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainBody.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainBody.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainBody.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainBody().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton jDButton;
    protected static javax.swing.JButton jEButton;
    private javax.swing.JButton jOpenFileButton;
    public static javax.swing.JButton jSButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
